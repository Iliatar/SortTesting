/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.example.dataProvider.FragmentedIntegerDataProvider;
import org.example.dataProvider.SimpleIntegerDataProvider;
import org.example.outputGenerators.BasicOutputGenerator;
import org.example.outputGenerators.OutputGenerator;
import org.example.outputUnit.ConsoleOutputUnit;
import org.example.outputUnit.OutputUnit;
import org.example.outputUnit.TextFileOutputUnit;
import org.example.sorterUnit.BenchmarkIntegerSorter;
import org.example.sorterUnit.SorterUnit;
import org.example.testUnit.TestItem;
import org.example.xmlconfig.ConfigurationParser;
import picocli.CommandLine;
import picocli.CommandLine.Option;
import picocli.CommandLine.Command;
import picocli.CommandLine.Parameters;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

@Command(
        name = "test",
        description = "Test sorter unit benchmark"
)
public class App implements Runnable {
    @Parameters(index = "0", arity = "1",
            description = "File path with json test configuration. ")
    private String configurationFilePath;

    @Option(names = {"-f", "--fileOutput"}, description = "Output to file flag")
    private boolean fileOutput;

    public static void main(String[] args) {
        int exitCode = new CommandLine(new App()).execute(args);
        System.exit(exitCode);
    }

    @Override
    public void run() {
        try {
            runTests();
        } catch (Exception e) {
            System.out.println("\nException happened: " + e.getMessage());
        }
    }

    private void runTests() throws Exception {
        SorterUnit<Integer> benchmarkSorter = new BenchmarkIntegerSorter();
        File configurationFile = new File(configurationFilePath);

        var testUnit = ConfigurationParser.getTestUnit(benchmarkSorter, configurationFile);

        testUnit.runTest();

        if (!testUnit.isComplete()) return;

        OutputGenerator basicOutputGenerator = new BasicOutputGenerator();
        OutputUnit outputUnit = fileOutput
                ? new TextFileOutputUnit(basicOutputGenerator, testUnit)
                : new ConsoleOutputUnit(basicOutputGenerator, testUnit);
        outputUnit.writeOutput();
    }
}
